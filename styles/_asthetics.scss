@use 'variables' as *;
@use "sass:color";

body {
    color: $secondary;
    background-color: $primary;
    &:after {
        content: '';
        animation: grain 20s steps(10) infinite;
        background-image: url('../assets/img-noise-400x400.png');
        height: 300%;
        left: -50%;
        position: fixed;
        top: -100%;
        width: 300%;
        opacity: 0.5;
        z-index: -1;
    }
}

@keyframes grain {
    0%,
    100% {
        transform: translate(0, 0);
    }
    10% {
        transform: translate(-5%, -10%);
    }
    20% {
        transform: translate(-15%, 5%);
    }
    30% {
        transform: translate(7%, -20px);
    }
    40% {
        transform: translate(-5%, 20px);
    }
    50% {
        transform: translate(-15%, 10%);
    }
    60% {
        transform: translate(15%, 0%);
    }
    70% {
        transform: translate(0%, 15%);
    }
    80% {
        transform: translate(3%, 35%);
    }
    90% {
        transform: translate(-10%, 10%);
    }
}

.dots {
    position: absolute;
    top: 0;
    width: 100%;
    height: 100%;
    background-size: 30px 30px;
    background-image: radial-gradient(
        circle,
        $secondary 1px,
        rgba(0, 0, 0, 0) 1px
    );
}

.bg {
    background-color: rgba(59, 59, 59, 0.3);
}

.lined-corners {
    background-image: linear-gradient($secondary, $secondary),
        linear-gradient($secondary, $secondary),
        linear-gradient($secondary, $secondary),
        linear-gradient($secondary, $secondary),
        linear-gradient($secondary, $secondary),
        linear-gradient($secondary, $secondary),
        linear-gradient($secondary, $secondary),
        linear-gradient($secondary, $secondary);
    background-repeat: no-repeat;
    background-size: 1px 20px, 20px 1px, 1px 20px, 20px 1px, 1px 20px, 20px 1px,
        1px 20px, 20px 1px, 1px 20px;
    background-position: left bottom, left bottom, right top, right top,
        left top, left top, right bottom, right bottom;
}

.lined-x-corners {
    background-image: linear-gradient($secondary, $secondary),
        linear-gradient($secondary, $secondary),
        linear-gradient($secondary, $secondary),
        linear-gradient($secondary, $secondary),
        linear-gradient($secondary, $secondary),
        linear-gradient($secondary, $secondary),
        linear-gradient($secondary, $secondary),
        linear-gradient($secondary, $secondary);
    background-repeat: no-repeat;
    background-size: 1px 20px, 50% 1px, 1px 20px, 50% 1px, 1px 20px, 50% 1px,
        1px 20px, 50% 1px, 1px 20px;
    background-position: left bottom, left bottom, right top, right top,
        left top, left top, right bottom, right bottom;
}

.grid-pattern {
    background-image: linear-gradient(
            transparent 21px,
            rgba(220, 220, 200, 0.8) 22px,
            transparent 22px
        ),
        linear-gradient(
            90deg,
            transparent 21px,
            rgba(220, 220, 200, 0.8) 22px,
            transparent 22px
        );
    background-size: 100% 22px, 22px 100%;
}

.glitch {
    position: relative;
}

.glitch::before,
.glitch::after {
    color: white;
    content: attr(data-text);
    position: absolute;
    overflow: hidden;
}

.glitch::before {
    left: -2px;
    text-shadow: -2px 0 red;
    animation-name: glitch-animation-1;
    animation-duration: 2s;
    animation-timing-function: linear;
    animation-delay: 0s;
    animation-iteration-count: infinite;
    animation-direction: reverse-alternate;
}

.glitch::after {
    left: -3px;
    text-shadow: -2px 0 blue;
    animation-name: glitch-animation-2;
    animation-duration: 2s;
    animation-timing-function: linear;
    animation-delay: 0s;
    animation-iteration-count: infinite;
    animation-direction: reverse-alternate;
}

@keyframes glitch-animation-1 {
    $steps: 20;
    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            clip: rect(random(150) + px, 350px, random(150) + px, 10px);
        }
    }
}

@keyframes glitch-animation-2 {
    $steps: 20;
    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            clip: rect(random(150) + px, 350px, random(150) + px, 0px);
        }
    }
}

.image-accent {
    display: block;
    position: relative;
    font-size: 0;
    &::before {
        content: '';
        position: absolute;
        left: -2rem;
        bottom: -1rem;
        height: 100%;
        width: 100%;
        border: 1px solid $secondary;
        opacity: 0.3;
        z-index: -1;
    }
}
